class Solution {
    List<Integer> nums;
    int m,ans[][];
    public boolean find(int i,int j){
        if(j-i+1<=2)
            return true;
        else if(ans[i][j]!=-1)
            return ans[i][j]==1;
        else{
            int sum=0;
            for(int k=i;k<=j;k++)
                sum+=nums.get(k);
            boolean x= sum-nums.get(i)>=m&&find(i+1,j)||
            sum-nums.get(j)>=m&&find(i,j-1);
            if(x==true)
                ans[i][j]=1;
            else
                ans[i][j]=0;
            return x;
        }
        
    }
    public boolean canSplitArray(List<Integer> nums, int m) {
        this.nums=nums;
        this.m=m;
        int s=0,n=nums.size();
        ans= new int[n][n];
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
                ans[i][j]=-1;
        return find(0,n-1);
    }
}
