class Solution {
    String str1,str2;
    int n1,n2,visited[][];
    public int find(int i,int j){
        if(i==n1||j==n2)
            return 0;
        else if(visited[i][j]!=-1)
            return visited[i][j];
        else if(str1.charAt(i)==str2.charAt(j))
            return 1+find(i+1,j+1);
        else{
            visited[i][j]=Math.max(find(i+1,j),find(i,j+1));
            return visited[i][j];
        }
    }
    public int longestCommonSubsequence(String text1, String text2) {
        str1=text1;
        str2=text2;
        n1=text1.length();
        n2=text2.length();
        visited= new int[n1][n2];
        for(int i=0;i<n1;i++)
            for(int j=0;j<n2;j++)
                visited[i][j]=-1;
        return find(0,0);
    }
}
